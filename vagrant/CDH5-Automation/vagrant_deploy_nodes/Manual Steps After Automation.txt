multiscreen
multiscreen cm-master-dev2-1 cdh-master-dev2-1 cdh-master-dev2-2 dev-edgenode-1

multiscreen cm-master-dev2-1 cdh-master-dev2-1 cdh-master-dev2-2






Before running Ansible
1. Add CM and CDH repos inside the directory that you specified in Vagrant as your REPOSITORY

2. setup hosts in /etc/ansible/hosts
[edgenode]
dev-edgenode-1

[cloudera-masters]
cdh-master-dev2-1
cdh-master-dev2-2

[cloudera-slaves]
cm-master-dev2-1
cdh-master-dev2-1
cdh-master-dev2-2

[cm-masters]
cm-master-dev2-1

[all]
cm-master-dev2-1
cdh-master-dev2-1
cdh-master-dev2-2

[database]
cm-master-dev2-1

3. Setup passwordless login. Repeat this on each computer (Do this from the edgenode)
ssh-keygen -t rsa

ssh vagrant@cdh-master-dev2-2 mkdir -p .ssh

cat ~/.ssh/id_rsa.pub | ssh vagrant@cdh-master-dev2-2 'cat >> .ssh/authorized_keys'

ssh vagrant@cdh-master-dev2-2 "chmod 700 .ssh; chmod 640 .ssh/authorized_keys"


# cm-master-dev2-1 cdh-master-dev2-1 cdh-master-dev2-2

4. Update Anaconda parcel_url in Group_vars

5. Connect to Python from the edgenode - Run this on Anaconda node
jupyter notebook --no-browser --port=8889

# you should leave the this open
In your local computer, open MS-DOS cmd (if using Windows) or Unix terminal, then type:

ssh -N -f -L localhost:8888:localhost:8889 vagrant@dev-edgenode-1

# make sure to change `username` to your real username in remote host
# change `your_remote_host_name` to your address of your working station
# Example: ssh -N -f -L localhost:8888:localhost:8889 laura@cs.rutgers.edu
Now open web browser (google chrome, firefox, ...) and type:

localhost:8888
# you will see your notebooks in your given directory


6. Configure Bind
sudo vi /etc/resolv.conf

************************
options single-request-reopen
; generated by /sbin/dhclient-script
search home xpoint.internal
nameserver 10.10.48.30
************************

sudo yum install bind bind-utils -y

sudo vi /etc/named.conf

sudo vi /var/named/xpoint.internal.zone

sudo vi /var/named/10.10.48.rev

7. Configure mysql == We need to secure install in Ansible



yum -y install mysql-server


------------------------------
yum -y install mysql-server
service mysqld start
mysql_install_db
sudo su -
mysql_secure_installation
--------------------------
-----------

Move old InnoDB log files /var/lib/mysql/ib_logfile0 and /var/lib/mysql/ib_logfile1 out of /var/lib/mysql/ to a backup location


mkdir -p  ~/backup/mysql
mv /var/lib/mysql/ib_logfile0 ~/backup/mysql

mv /var/lib/mysql/ib_logfile1  ~/backup/mysql
