varManagerServer = "templateMasterNode"
varSlaveServer = "templateSlaveNode"
varDomain = "xpoint.internal"
varHostEntries = ""
varRepository = "E:/Barclays/VAGRANT_PROJECT/REPOSITORY/"
webServerParcelsDir = "parcels"
webServerCDHDir = "_cdh5-parcels"
varCmAgentStatus = "stop"

# Define the hosts in an array

hadoop_nodes = [
              {:host => "#{varManagerServer}", :ip => "10.10.45.10", :box => "boxcutter/centos67", :gui => false, :ram => 10240, :cpu => 10},
              { :host => "#{varSlaveServer}", :ip => "10.10.45.11", :box => "boxcutter/centos67", :gui => false, :ram => 10240, :cpu => 10},
            #  {:host => "#{varSlaveServer}""-2", :ip => "10.10.45.12", :box => "boxcutter/centos67", :gui => false, :ram => 10240, :cpu => 10}
]

#"#{varManagerServer}""-1"
#"#{varSlaveServer}""-1"


hadoop_nodes.each do |hadoop_node|
    varHostEntries << "#{hadoop_node[:ip]} #{hadoop_node[:host]}.#{varDomain} #{hadoop_node[:host]}\n"
end
#Now pass hostfile content into /etc/hosts
$etchosts = <<SCRIPT
#!/bin/bash
cat > /etc/hosts <<EOF
127.0.0.1       localhost
10.10.45.1     host.#{varDomain} host
#{varHostEntries}
EOF
SCRIPT

Vagrant.configure("2") do |config|
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = false
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true
  hadoop_nodes.each do |hadoop_node|
  config.vm.define hadoop_node [:host] do |hadoop_config|

    hadoop_config.vm.box = hadoop_node [:box]

    hadoop_config.vm.network "private_network", ip: hadoop_node[:ip], :netmask => "255.255.255.0"
    hadoop_config.vm.hostname = "#{hadoop_node [:host]}.#{varDomain}"
    hadoop_config.hostmanager.aliases = "#{hadoop_node[:host]}"
    hadoop_config.vm.provider :virtualbox do |v|
      v.name = hadoop_node[:host].to_s
      v.gui = hadoop_node[:gui]
      v.customize ["modifyvm", :id, "--memory", hadoop_node[:ram].to_s]
      v.customize ["modifyvm", :id, "--cpus", hadoop_node[:cpu].to_s]
    end

    hadoop_config.vm.synced_folder varRepository, "/repository",
      id: "repository",
      owner: "vagrant",
      group: "vagrant"
    #"Configuring Java", "Inserting hostnames in /etc/hosts"
      hadoop_config.vm.provision :shell, :path => "deployJava/provision_for_java.sh"
      hadoop_config.vm.provision :shell, :path => "tuning-os/tunning_operating_system.sh"
      hadoop_config.vm.provision :shell, :inline => $etchosts
      puts "Starting Cloudera Manager Deployment using RPMS"
      hadoop_config.vm.provision :shell, :path => "deployClouderaRepo/provision_rpm_cm572.sh"


      #Deploy Web Server and CM Manager on the Master
      if hadoop_node[:host] == varManagerServer
         hadoop_config.vm.provision :shell,
        :path => "deployWebserver/provision_httpd_67_v3.sh",
        :args => [varManagerServer, webServerParcelsDir,  webServerCDHDir]
        hadoop_config.vm.provision :shell, :path => "deployClouderaManager/provision_for_cdh_master_embedded.sh"
      end
      hadoop_config.vm.provision :shell, :path => "deployClouderaAgent/provision_for_cdh_datanode.sh",
      :args => [varSlaveServer , varCmAgentStatus]

    end
  end
end
